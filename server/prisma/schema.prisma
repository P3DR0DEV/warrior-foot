// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  League      League[]
  LeagueUsers LeagueUsers[]

  @@map("users")
}

model League {
  id        String   @id @default(uuid())
  name      String
  code      String   @unique
  userId    String   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  Team        Team[]
  LeagueUsers LeagueUsers[]

  @@index([code])
  @@map("leagues")
}

enum Division {
  A
  B
  C
  D
}

model Team {
  id             String   @id @default(uuid())
  name           String
  primaryColor   String   @map("primary_color")
  secondaryColor String   @map("secondary_color")
  division       Division
  leagueId       String   @map("league_id")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  league League @relation(fields: [leagueId], references: [id], onDelete: Cascade)

  @@map("teams")
}

enum LeagueUsersRole {
  owner
  guest
}

model LeagueUsers {
  id        String          @id @default(uuid())
  leagueId  String          @map("league_id")
  userId    String          @map("user_id")
  role      LeagueUsersRole
  createdAt DateTime        @default(now()) @map("created_at")
  updatedAt DateTime        @updatedAt @map("updated_at")

  league League @relation(fields: [leagueId], references: [id], onDelete: Cascade)
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("league_users")
}
